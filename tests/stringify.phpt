--TEST--
stringify test
--FILE--
<?php 
date_default_timezone_set('America/New_York');

require("testdb.inc");
global $db;  
open_db();

function test1() {
  global $db;
  $sql0 = 'DROP TABLE "sequences" CASCADE IF EXISTS';
  echo "sql0: " . $sql0 . "\n";
  $db->query($sql0);

  $sql1 = 'CREATE TABLE "sequences" (
	"value" INT GENERATED BY DEFAULT AS IDENTITY,
	PRIMARY KEY (value)
	)';
  echo "sql1: " . $sql1 . "\n";
  $db->query($sql1);

  $sql3 = 'INSERT INTO sequences (value) VALUES (:nuopdo1)';
  echo "sql3: " . $sql3 . "\n";
  $stmt3 = $db->prepare($sql3);
  $db_insert_placeholder_0 = "2";
  $stmt3->bindParam(':nuopdo1', $db_insert_placeholder_0, PDO::PARAM_STR);
  $stmt3->execute();

  $sql5 = 'SELECT MAX(value) FROM sequences';
  echo "sql5: " . $sql5 . "\n";
  $stmt5 = $db->prepare($sql5);
  $stmt5->execute();
  $value = $stmt5->fetchColumn(0);
  var_dump($value);

  $sql6 = 'SELECT COUNT(*) FROM sequences';
  echo "sql6: " . $sql6 . "\n";
  $stmt6 = $db->prepare($sql6);
  $stmt6->execute();
  $value2 = $stmt6->fetchColumn(0);
  var_dump($value2);

}


try {  
  $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

  echo "\nPDO::ATTR_STRINGIFY_FETCHES=FALSE\n";
  $db->setAttribute(PDO::ATTR_STRINGIFY_FETCHES, FALSE);
  test1();

  echo "\nPDO::ATTR_STRINGIFY_FETCHES=TRUE\n";
  $db->setAttribute(PDO::ATTR_STRINGIFY_FETCHES, TRUE);
  test1();

  $db = NULL;
} catch(PDOException $e) {  
  echo $e->getMessage();  
}
$db = NULL;  
echo "\ndone\n";
?>
--EXPECT--
PDO::ATTR_STRINGIFY_FETCHES=FALSE
sql0: DROP TABLE "sequences" CASCADE IF EXISTS
sql1: CREATE TABLE "sequences" (
	"value" INT GENERATED BY DEFAULT AS IDENTITY,
	PRIMARY KEY (value)
	)
sql3: INSERT INTO sequences (value) VALUES (:nuopdo1)
sql5: SELECT MAX(value) FROM sequences
int(2)
sql6: SELECT COUNT(*) FROM sequences
int(1)

PDO::ATTR_STRINGIFY_FETCHES=TRUE
sql0: DROP TABLE "sequences" CASCADE IF EXISTS
sql1: CREATE TABLE "sequences" (
	"value" INT GENERATED BY DEFAULT AS IDENTITY,
	PRIMARY KEY (value)
	)
sql3: INSERT INTO sequences (value) VALUES (:nuopdo1)
sql5: SELECT MAX(value) FROM sequences
string(1) "2"
sql6: SELECT COUNT(*) FROM sequences
string(1) "1"

done
